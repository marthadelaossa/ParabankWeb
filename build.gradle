buildscript {

    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:${gradlePlugin}"
    }
}
plugins {
     id 'java-library'
}

repositories {
    maven {url "https://plugins.gradle.org/m2/"}
    mavenLocal()
    mavenCentral()
}
apply plugin: "net.serenity-bdd.serenity-gradle-plugin"

defaultTasks 'clean','test','aggregate'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
dependencies {
    implementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-junit:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-reports:${serenityCoreVersion}"
    implementation "org.assertj:assertj-core:${assertjCore}"
    implementation "org.apache.poi:poi:${poi}"
    implementation "org.apache.poi:poi-ooxml:${poi}"
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"
    implementation "io.github.bonigarcia:webdrivermanager:${bonigarcia}"
    implementation "com.h2database:h2:${h2}"
    implementation "net.datafaker:datafaker:${dataFaker}"
}


test {
    useJUnit {
        include "**/*"
        gradle.startParameter.continueOnFailure = true
        testLogging.showStandardStreams = true
        systemProperties System.getProperties()
        systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")
    }

    test.finalizedBy(aggregate)
}